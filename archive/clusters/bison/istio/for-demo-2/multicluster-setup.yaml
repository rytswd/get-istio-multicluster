---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: bison-multicluster-ingressgateway
  namespace: istio-system
  labels:
    app: bison-multicluster-ingressgateway
spec:
  selector:
    app: bison-multicluster-ingressgateway
  servers:
    - hosts:
        - "*.global"
        # - "*.bison.global"
      port:
        name: tls
        number: 15443
        protocol: TLS
      tls:
        mode: AUTO_PASSTHROUGH

---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: bison-multicluster-ingressgateway
  namespace: istio-system
  labels:
    app: bison-multicluster-ingressgateway
spec:
  configPatches:
    # Istio 1.6 or below - map `.global` to `.svc.cluster.local`
    - applyTo: NETWORK_FILTER
      match:
        context: GATEWAY
        proxy:
          proxyVersion: ^1\.6.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.sni_cluster
          portNumber: 15443
      patch:
        operation: INSERT_AFTER
        value:
          config:
            cluster_pattern: \.global$
            cluster_replacement: .svc.cluster.local
          name: envoy.filters.network.tcp_cluster_rewrite
    # Istio 1.7 - map `.global` to `.svc.cluster.local`
    - applyTo: NETWORK_FILTER
      match:
        context: GATEWAY
        proxy:
          proxyVersion: ^1\.7.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.sni_cluster
          portNumber: 15443
      patch:
        operation: INSERT_AFTER
        value:
          name: envoy.filters.network.tcp_cluster_rewrite
          typed_config:
            "@type": "type.googleapis.com/istio.envoy.config.filter.network.tcp_cluster_rewrite.v2alpha1.TcpClusterRewrite"
            cluster_pattern: \.global$
            cluster_replacement: .svc.cluster.local

    # Istio 1.6 or below - map `.bison.global` to `.svc.cluster.local`
    - applyTo: NETWORK_FILTER
      match:
        context: GATEWAY
        proxy:
          proxyVersion: ^1\.6.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.sni_cluster
          portNumber: 15443
      patch:
        operation: INSERT_AFTER
        value:
          config:
            cluster_pattern: \.bison.global$
            cluster_replacement: .svc.cluster.local
          name: envoy.filters.network.tcp_cluster_rewrite
    # Istio 1.7 - map `.bison.global` to `.svc.cluster.local`
    - applyTo: NETWORK_FILTER
      match:
        context: GATEWAY
        proxy:
          proxyVersion: ^1\.7.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.sni_cluster
          portNumber: 15443
      patch:
        operation: INSERT_AFTER
        value:
          name: envoy.filters.network.tcp_cluster_rewrite
          typed_config:
            "@type": "type.googleapis.com/istio.envoy.config.filter.network.tcp_cluster_rewrite.v2alpha1.TcpClusterRewrite"
            cluster_pattern: \.bison.global$
            cluster_replacement: .svc.cluster.local
  workloadSelector:
    labels:
      app: bison-multicluster-ingressgateway # As there are multiple ingressGateway, this ensures correct one being used

---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: multicluster-traffic-from-bison
  namespace: istio-system
spec:
  host: "*.global"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
